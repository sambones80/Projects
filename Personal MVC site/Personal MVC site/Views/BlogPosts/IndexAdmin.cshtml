@using PagedList;
@using PagedList.Mvc;
@*@model IEnumerable<Personal_MVC_site.Models.BlogPost>*@
@model IPagedList<Personal_MVC_site.Models.BlogPost>

@{
    ViewBag.Title = "Index";
}

@{
    Layout = "~/Views/Shared/_LayoutBlog.cshtml";
}

<div class="container portfolio-content topspace">
    <div class="row">
        <div class="col-md-6">
            <ul class="list-inline">
                <li>
                    @using (Html.BeginForm("IndexAdmin", "BlogPosts", FormMethod.Get, htmlAttributes: new { @class = "form" }))
                    {
                        <div class="controls controls-row search-row">
                            <input id="searchStrAdmin" name="searchStrAdmin" class="input-sm" type="text" placeholder="Search" />
                            <button id="searchStrAdmin" name="searchStrAdmin" class="btn btn-default" type="submit">
                                <i class="glyphicon glyphicon-search"></i>
                            </button>
                        </div>
                    }
                </li>
                <li>
                    <a href='@Url.Action("Create")' class="btn btn-default">Create New Post</a>
                </li>
                <li>
                    <a href='@Url.Action("Index")#contact' class="btn btn-default">Blog</a>
                </li>
            </ul>
        </div>
        <div class="col-md-6 text-right">
            @if (Request.IsAuthenticated)
            {
                <p class="lower-blog-head">Welcome: @User.Identity.Name</p>
            }
            else
            {
                <a href='@Url.Action("Login", "Account")' class="lower-blog-head-login">Welcome guest. Please log in if you would like to comment.</a>
            }
        </div>
    </div>
    <hr />
</div>

<div class="container">
    <div class="text-center">
        <h2 class="text-center topspace">Blog Posts</h2>
    </div>
    <br />
    <br />
    <table class="table">
        <tr>
            <th class="col-md-1">
                @*@Html.DisplayNameFor(model => model.Created)*@
                Created
            </th>
            <th class="col-md-1">
                @*@Html.DisplayNameFor(model => model.Updated)*@
                Updated
            </th>
            <th class="col-md-2">
                @*@Html.DisplayNameFor(model => model.Title)*@
                Title
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>*@
            <th class="col-md-6">
                @*@Html.DisplayNameFor(model => model.Body)*@
                Body
            </th>
            <th class="col-md-2">
                @*@Html.DisplayNameFor(model => model.MediaURL)*@
                Image
            </th>
            @*<th class="col-md-1">
                @Html.DisplayNameFor(model => model.Published)
                Published
            </th>*@
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>*@
                <td>
                    <div class="scroll-box">
                        @*@Html.DisplayFor(modelItem => item.Body)*@
                        @Html.Raw(item.Body)
                    </div>
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.MediaURL)*@
                    @if (item.MediaURL != null)
                    {
                        <img class="img-responsive" src="@item.MediaURL" alt="" style="height: 110px;" />
                    }
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.Published)
                </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { slug = item.Slug })
                    @Html.ActionLink("Details", "DetailsAdmin", new { slug = item.Slug })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
</div>
