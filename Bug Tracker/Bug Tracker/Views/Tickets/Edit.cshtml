@model Bug_Tracker.Models.Ticket

@{
    ViewBag.Title = "Ticket Details";
}

<h2>@Html.DisplayFor(model => model.Title)</h2>

<h4>@Html.DisplayFor(model => model.Created)</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ProjectId)
        @*@Html.HiddenFor(model => model.StatusId)*@
        @Html.HiddenFor(model => model.AuthorUserId)
        @*@Html.HiddenFor(model => model.AssignedToUserId)*@

        <div class="form-group">
            <label class="control-label col-md-2" for="TypeId">Title</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="TypeId">Description</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, 8, 50, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <label class="control-label col-md-2" for="TypeId">Type</label>
            <div class="col-md-10">
                @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            if (User.IsInRole("Admin") || User.IsInRole("Project Manager") || User.IsInRole("Developer"))
            {
                <div class="form-group">
                    <label class="control-label col-md-2" for="TypeId">Priority</label>
                    <div class="col-md-10">
                        @Html.DropDownList("PriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="control-label col-md-2" for="TypeId">Priority</label>
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.PriorityId)
                        <p>@Html.DisplayFor(model => model.Priority.Name)</p>
                    </div>
                </div>
            }
        }

        @{
            if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
            {
                <div class="form-group">
                    <label class="control-label col-md-2" for="Status">Status</label>
                    <div class="col-md-10">
                        @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="control-label col-md-2" for="TypeId">Status</label>
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.StatusId)
                        <p>@Html.DisplayFor(model => model.Status.Name)</p>
                    </div>
                </div>
            }
        }

        @*<div class="form-group">
                @Html.LabelFor(model => model.AuthorUserId, "AuthorUserId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AuthorUserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AuthorUserId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @{
            if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
            {
                <div class="form-group">
                    <label class="control-label col-md-2" for="TypeId">Assigned to</label>
                    <div class="col-md-10">
                        @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="control-label col-md-2" for="TypeId">Assigned to</label>
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.AssignedToUserId)
                        <p>@Html.DisplayFor(model => model.AssignedToUser.DisplayName)</p>
                    </div>
                </div>
            }
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
            }

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>
